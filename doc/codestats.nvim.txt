*codestats.nvim.txt*         For NVIM v0.8.0        Last change: 2023 March 13

==============================================================================
Table of Contents                           *codestats.nvim-table-of-contents*

1. Codestats.nvim                              |codestats.nvim-codestats.nvim|
  - Code::Stats lua plugin for Neovim|codestats.nvim-codestats.nvim-code::stats-lua-plugin-for-neovim|
2. Requirements                                  |codestats.nvim-requirements|
3. Installation                                  |codestats.nvim-installation|
4. Commands                                          |codestats.nvim-commands|
5. TODO:                                                |codestats.nvim-todo:|

==============================================================================
1. Codestats.nvim                              *codestats.nvim-codestats.nvim*


CODE::STATS LUA PLUGIN FOR NEOVIM*codestats.nvim-codestats.nvim-code::stats-lua-plugin-for-neovim*

Neovim plugin that counts your keypresses and saves statistics to Code::Stats
<https://codestats.net>, a free stats tracking service for programmers.

This is port of the official plugin
<https://gitlab.com/code-stats/code-stats-vim> written in Lua. It don’t use
pythonx interface (it is not a remote-plugin), instead it spawns curl process
as luv asynchronous job and therefore it loads faster and don’t interfere
with interface rendering.


==============================================================================
2. Requirements                                  *codestats.nvim-requirements*


- Neovim
- Curl
- plenary.nvim <https://github.com/nvim-lua/plenary.nvim>


==============================================================================
3. Installation                                  *codestats.nvim-installation*


1. Get a Code::Stats account and copy your API key from the Code::Stats machine
page <https://codestats.net/my/machines>.

2. Install and configure code-stats-nvim



>lua
    -- Lazy.nvim
    {
      'liljaylj/code-stats-nvim',
      dependencies = { 'nvim-lua/plenary.nvim' },
      config = function()
        require('codestats').setup {
          base_url = 'https://codestats.net',  -- codestats.net base url
          api_key = '<your API key>',
          send_on_exit = true,  -- send xp on nvim exit
          send_on_timer = true,  -- send xp on timer
          timer_interval = 10000,  -- timer interval in ms
        }
      end,
    }
<


==============================================================================
4. Commands                                          *codestats.nvim-commands*


- `:CodeStatsSend` — manually send XP to Code::Stats <https://codestats.net>


==============================================================================
5. TODO:                                                *codestats.nvim-todo:*


- ☐ `:CodeStatsStatus` command to show current unsent XP and last sent timestamp or error message
- ☐ native statusline item and/or Lualine section
- ☐ integrate vim.notify
- ☐ define autocmd `CodeStatsXPSent` to allow creating xp sent callbacks
- ☐ research ability to count char deletion in insert mode
- ☐ add screenshot/screencast (need to host it outside of this repo) to demonstrate functionality
- ☐ error handling
- ☐ add documentation
- ☐ ability to ignore filetypes, buffers, etc

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
